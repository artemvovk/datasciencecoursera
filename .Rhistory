1:20
pi:10
15:1
?':'
seq(1,20)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep((0,1,2) times=10)
rep((0,1,2), times=10)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vetc <- c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
remove(num_vetc, my_div, my_seq)
remove(x,y,z)
remove(my_sqrt, num_vetc)
tf <- num_vect < 1
tf
nf <- num_vect >=
nf <- num_vect >= 6
nf <- num_vect >= 6
num_vect >= 6
my_char <- ("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Kierachell")
my_name <- c(my_char, "Kierachell")
my_name
paste(my_name, collapse = " ")
paste("Hey", "bud!", sep = " ")
paste("Hello", "world!", sep = " ")
paste((1:3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
play()
nxt()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
plot(y)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
plot(my_data)
is.na(my_data)
plot(is.na(my_data))
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
sum(my_data)
0/0
Inf-Inf
x
restart()
info()
main()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[1000]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- (11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attr(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
exit
quit
quit()
file.create("firstFunc.R")
ls()
dir()
ls
add1(2,3)
add2()
library("myfunc.R")
add2 <- function(x, y){
return(x+y)
}
add2(2,3)
remove(add2)
above10 <- function(x){
return(x[x>10])
}
above10(c(10, 11, 12, 3, 5, 6, 100))
remove(add10)
remove(above10)
aboveNum <- function(x, y){
return(x[x>y])
}
aboveNum(c(10, 11, 12, 3, 5, 6, 100), 5)
aboveNum(c(10, 11, 12, 3, 5, 6, 100))
aboveNum <- function(x, y=10){
return(x[x>y])
}
aboveNum(c(10, 11, 12, 3, 5, 6, 100))
aboveNum(c(10, 11, 12, 3, 5, 6, 100), 3)
colMean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in seq_along(nc)){
means[i] <- mean(y[, i])
}
return(means)
}
colMean(airmiles)
colMean(airquality)
colMean(data.frame(read.csv("hw1_data.csv")))
colMean <- function(y, removeNA=TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in seq_along(nc)){
means[i] <- mean(y[, i], na.rm=removeNA)
}
return(means)
}
colMean(data.frame(read.csv("hw1_data.csv")))
serach()
search()
x <- Sys.time()
x
p <- as.POSIXct(x)
x
p <- as.POSIXlt(x)
p
p <- as.POSIXlt(x)
p <- as.POSIXct(x)
p <- strptime(x)
p <- strptime(x, "%B %d, %H:%M")
p
p <- strptime(Sys.time(), "%B %d, %H:%M")
p
p[1]
swirl
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE,
| FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins", "twins")
xor(5 ==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function()
boring_function
submit()
my_mean(c(4,510))
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
agrs(remainder())
agrs(remainder
agrs(remainder)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(9,4,0))
evaluate(function(x){x.first}, c(9,4,0))
evaluate(function(x){x[[1]]}, c(9,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[-1]}, c(8,4,0))
evaluate(function(x){x[0]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
telegram("Whatever", "Arguments", "That")
submit()
submit()
mad_libs(place="London", adjective="black", noun="cracker")
submit()
'I'%p%'love'%p%'R'
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
dl <- Sys.Date()
remove(dl)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, unites = 'days')
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
?cube
cube
cube(x)
cube(4)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
read.csv(file.path("specdata/001.csv"))
read.csv(file.path("specdata/022.csv"))
read.csv(file.path("specdata/022.csv").is.na())
inx <- read.csv(file.path("specdata/022.csv"))
inx
inx[!is.na()]
inx[!is.na(inx)]
remove(inx)
?file
"specdata"+"/"+1:332+".csv"
"specdata"+"/"+1:332+".csv"
"specdata"+"\/"+1:332+".csv"
paste("specdata","/",1:332,".csv")
paste("specdata","/",1:332,".csv", sep = "")
?is.na
getwd()
ls()
library("pollutantmean.R")
library(pollutantmean.R)
source("pollutantmean.R")
library(pollutantmean.R)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
library(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
read.csv("specdata/001.csv", "sulfate")
read.csv("specdata/001.csv", colClasses = "sulfate")
read.csv("specdata/001.csv", colClasses = c("sulfate", NA, NA)
read.csv("specdata/001.csv", colClasses = c("sulfate", NA, NA))
?read.csv
read.csv("specdata/001.csv")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
monitorData <- read.csv("specdata/001.csv")
monitorData[!is.na(monitorData["sulfate"])]
monitorData["sulfate"]
is.na(monitorData["sulfate"])
monitorData(!is.na(monitorData["sulfate"]))
monitorData[!is.na(monitorData["sulfate"])]
mean(monitorData["sulfate"], rm.na=TRUE)
mean(monitorData["sulfate"], na.rm=TRUE)
mean((numeric)monitorData["sulfate"], na.rm=TRUE)
mean(as.numeric(monitorData["sulfate"]), na.rm=TRUE)
monitorData["sulfate"]
monitorData["sulfate"].type
type(monitorData["sulfate"])
typeof(monitorData)
typeof(monitorData["sulfate"])
typeof(monitorData["sulfate"][1])
monitorData["sulfate"][1]
monitorData["sulfate"][[1]]
monitorData[["sulfate"]
monitorData[["sulfate"]]
typeof(monitorData[["sulfate"]])
mean(monitorData[["sulfate"]], na.rm=TRUE)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
length(70:72)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
length(1:10)
?mean
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
file.copy("pollutantmean.R", "complete.R")
ls()
Sys.time()
typeof(Sys.time())
remove(monitorData)
open.srcfile("complete.R")
monitorData <- read.csv("specdata/001.csv")
complete.cases(monitorData)
sum(complete.cases(monitorData))
?data.frame
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
sum(complete.cases(read.csv("specdata/001.csv")))
complete.cases(read.csv("specdata/001.csv")))
complete.cases(read.csv("specdata/001.csv"))
sum(complete.cases(read.csv("specdata/001.csv")))
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", 3)
complete("specdata", 30:25)
?cor
filenames <- list.files("specdata", pattern="*.csv", full.names=TRUE)
filenames
remove(filenames)
list.files("specdata", pattern="*.csv", full.names=TRUE)
dafa <- read.csv("specdata/001.csv")
cor(dafa$nitrate, dafa$sulfate)
cor(dafa$nitrate, dafa$sulfate)
cor(dafa)
dafa
cor(dafa$nitrate)
cor(dafa$nitrate, dafa$sulfate)
cor(dafa$nitrate[[!is.na(dafa$nitrate)], dafa$sulfate[[!is.na(dafa$sulfate)])
cor(dafa$nitrate[[!is.na(dafa$nitrate)]], dafa$sulfate[[!is.na(dafa$sulfate)]])
dafa$nitrate[[!is.na(dafa$nitrate)]
dafa$nitrate[[!is.na(dafa$nitrate)]]
dafa[[!is.na(dafa$nitrate)]]
dafa$nitrate[!is.na(dafa$nitrate)]
cor(dafa$nitrate[!is.na(dafa$nitrate)], dafa$sulfate[!is.na(dafa$sulfate)])
complete.cases(dafa)
dafa[[complete.cases(dafa)]]
dafa[complete.cases(dafa)]
dafa$sulfate[complete.cases(dafa)]
length(dafa$sulfate[complete.cases(dafa)])
length(dafa$nitrate[complete.cases(dafa)])
dafa$nitrate[complete.cases(dafa)]
source("corr.R")
corr("specdata")
length(corr("specdata"))
cv <- corr("specdata")
cv
summary(cv)
cv <- corr("specdata", 150)
summary(cv)
source("corr.R")
summary(cv)
cv <- corr("specdata", 150)
summary(cv)
cv <- corr("specdata", 5000)
summary(cv)
length(cv)
source("corr.R")
cv <- corr("specdata", 5000)
source("corr.R")
cv <- corr("specdata", 5000)
summary(cv)
length(cv)
cv <- corr("specdata")
summary(cv)
length(cv)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
source("corr.R")
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
quit()
