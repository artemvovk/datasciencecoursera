p <- strptime(Sys.time(), "%B %d, %H:%M")
p
p[1]
swirl
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE,
| FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins", "twins")
xor(5 ==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function()
boring_function
submit()
my_mean(c(4,510))
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
agrs(remainder())
agrs(remainder
agrs(remainder)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(9,4,0))
evaluate(function(x){x.first}, c(9,4,0))
evaluate(function(x){x[[1]]}, c(9,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[-1]}, c(8,4,0))
evaluate(function(x){x[0]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
telegram("Whatever", "Arguments", "That")
submit()
submit()
mad_libs(place="London", adjective="black", noun="cracker")
submit()
'I'%p%'love'%p%'R'
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
dl <- Sys.Date()
remove(dl)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, unites = 'days')
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
?cube
cube
cube(x)
cube(4)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
read.csv(file.path("specdata/001.csv"))
read.csv(file.path("specdata/022.csv"))
read.csv(file.path("specdata/022.csv").is.na())
inx <- read.csv(file.path("specdata/022.csv"))
inx
inx[!is.na()]
inx[!is.na(inx)]
remove(inx)
?file
"specdata"+"/"+1:332+".csv"
"specdata"+"/"+1:332+".csv"
"specdata"+"\/"+1:332+".csv"
paste("specdata","/",1:332,".csv")
paste("specdata","/",1:332,".csv", sep = "")
?is.na
getwd()
ls()
library("pollutantmean.R")
library(pollutantmean.R)
source("pollutantmean.R")
library(pollutantmean.R)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
library(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
read.csv("specdata/001.csv", "sulfate")
read.csv("specdata/001.csv", colClasses = "sulfate")
read.csv("specdata/001.csv", colClasses = c("sulfate", NA, NA)
read.csv("specdata/001.csv", colClasses = c("sulfate", NA, NA))
?read.csv
read.csv("specdata/001.csv")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
monitorData <- read.csv("specdata/001.csv")
monitorData[!is.na(monitorData["sulfate"])]
monitorData["sulfate"]
is.na(monitorData["sulfate"])
monitorData(!is.na(monitorData["sulfate"]))
monitorData[!is.na(monitorData["sulfate"])]
mean(monitorData["sulfate"], rm.na=TRUE)
mean(monitorData["sulfate"], na.rm=TRUE)
mean((numeric)monitorData["sulfate"], na.rm=TRUE)
mean(as.numeric(monitorData["sulfate"]), na.rm=TRUE)
monitorData["sulfate"]
monitorData["sulfate"].type
type(monitorData["sulfate"])
typeof(monitorData)
typeof(monitorData["sulfate"])
typeof(monitorData["sulfate"][1])
monitorData["sulfate"][1]
monitorData["sulfate"][[1]]
monitorData[["sulfate"]
monitorData[["sulfate"]]
typeof(monitorData[["sulfate"]])
mean(monitorData[["sulfate"]], na.rm=TRUE)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
length(70:72)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
length(1:10)
?mean
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
file.copy("pollutantmean.R", "complete.R")
ls()
Sys.time()
typeof(Sys.time())
remove(monitorData)
open.srcfile("complete.R")
monitorData <- read.csv("specdata/001.csv")
complete.cases(monitorData)
sum(complete.cases(monitorData))
?data.frame
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
sum(complete.cases(read.csv("specdata/001.csv")))
complete.cases(read.csv("specdata/001.csv")))
complete.cases(read.csv("specdata/001.csv"))
sum(complete.cases(read.csv("specdata/001.csv")))
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", 3)
complete("specdata", 30:25)
?cor
filenames <- list.files("specdata", pattern="*.csv", full.names=TRUE)
filenames
remove(filenames)
list.files("specdata", pattern="*.csv", full.names=TRUE)
dafa <- read.csv("specdata/001.csv")
cor(dafa$nitrate, dafa$sulfate)
cor(dafa$nitrate, dafa$sulfate)
cor(dafa)
dafa
cor(dafa$nitrate)
cor(dafa$nitrate, dafa$sulfate)
cor(dafa$nitrate[[!is.na(dafa$nitrate)], dafa$sulfate[[!is.na(dafa$sulfate)])
cor(dafa$nitrate[[!is.na(dafa$nitrate)]], dafa$sulfate[[!is.na(dafa$sulfate)]])
dafa$nitrate[[!is.na(dafa$nitrate)]
dafa$nitrate[[!is.na(dafa$nitrate)]]
dafa[[!is.na(dafa$nitrate)]]
dafa$nitrate[!is.na(dafa$nitrate)]
cor(dafa$nitrate[!is.na(dafa$nitrate)], dafa$sulfate[!is.na(dafa$sulfate)])
complete.cases(dafa)
dafa[[complete.cases(dafa)]]
dafa[complete.cases(dafa)]
dafa$sulfate[complete.cases(dafa)]
length(dafa$sulfate[complete.cases(dafa)])
length(dafa$nitrate[complete.cases(dafa)])
dafa$nitrate[complete.cases(dafa)]
source("corr.R")
corr("specdata")
length(corr("specdata"))
cv <- corr("specdata")
cv
summary(cv)
cv <- corr("specdata", 150)
summary(cv)
source("corr.R")
summary(cv)
cv <- corr("specdata", 150)
summary(cv)
cv <- corr("specdata", 5000)
summary(cv)
length(cv)
source("corr.R")
cv <- corr("specdata", 5000)
source("corr.R")
cv <- corr("specdata", 5000)
summary(cv)
length(cv)
cv <- corr("specdata")
summary(cv)
length(cv)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
source("corr.R")
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
quit()
?sapply
x <- 1:10
lapply(x, runif, min=0, max=1)
lapply(x, function(x){c(x,x)})
airquality
remove(x)
apply(airquality, 2, sum)
apply(airquality, 1, sum)
sapply(airquality, 1, sum)
apply(airquality, 2, quantile, probs=c(0.25, 0.75))
apply(airquality, 2, quantile, probs=c(0.25, 0.75), na.rm=TRUE)
mapply(rep, 10, 10)
mapply(rep, 1:10, 10:1)
mapply(rep, 1:50, 50:1)
mapply(rep, 50:1, 50:1)
mapply(rep, 50:1, 50:100)
split(airquality, airquality$Month)
lapply(split(airquality, airquality$Month), function(x){ plot (x)}
lapply(split(airquality, airquality$Month), function(x){ plot (x)})
lapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
sapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
lapply(split(airquality, airquality$Month), function(x) plot(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
lapply(split(airquality, airquality$Month), function(x) rnorm(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
lapply(split(airquality, airquality$Month), function(x) t.test(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
lapply(split(airquality, airquality$Month), function(x) mean(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
lapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
sapply(split(airquality, airquality$Month), function(x) plot(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
log(-1)
log(-1)
warnings()
log(-1)
warnings()
x <- print("Weird")
warning()
warnings()
warnings
warnings()
warnings(clear)
x
x
x
x
x
x
x
remove(x)
debug(sapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE)))
browser(sapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE)))
browser(sapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE)))
x
exit
browser()
sapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
traceback(sapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE)))
traceback(sapply(split(airquality, airquality$Month), function(x) plot(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE)))
sapply(split(airquality, airquality$Month), function(x) colMeans(x[c("Ozone", "Solar.R", "Wind", "Temp")], na.rm = TRUE))
traceback()
traceback(2)
traceback(3)
?traceback
traceback(10)
sapply
swirl()
swirl
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
remove(colors)
View(colors)
View(colors)
View(colors)
View(flag_colors)
View(flag_colors)
View(flags)
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flag_shapes, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
View(ok)
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
iris
head(iris)
iris
head(iris)
?iris
mean(iris$Sepal.Length)
tapply(iris$Sepal.Length, iris$Species, mean)
?round
round(6.588)
apply(iris$Sepal.Length, 1:4, mean)
apply(iris, 1:4, mean)
apply(iris[1:4], mean)
apply(iris[1:4], 2, mean)
?apply
apply(iris[1:4], 1, mean)
apply(iris[,1:4], 2, mean)
?mtcars
mtcars
library(datasets)
data(mtcars)
mtcars
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
meant(split(mtcars, mtcars$cyl)[1])
mean(split(mtcars, mtcars$cyl)[1])
mean(split(mtcars, mtcars$cyl)[,1])
mean(split(mtcars, mtcars$cyl)[,2])
mean(split(mtcars, mtcars$cyl)[,1])
mean(split(mtcars, mtcars$cyl)[[1])
mean(split(mtcars, mtcars$cyl)[[1]])
mean(split(mtcars, mtcars$cyl)[]:)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, mpg, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean.POSIXlt)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$hp, mtcars$cyl, avg)
tapply(mtcars$hp, mtcars$cyl, average)
mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[1]
tapply(mtcars$hp, mtcars$cyl, mean)[1][2]
tapply(mtcars$hp, mtcars$cyl, mean)[1][1]
tapply(mtcars$hp, mtcars$cyl, mean)[[1]]
tapply(mtcars$hp, mtcars$cyl, mean)[[1]]-tapply(mtcars$hp, mtcars$cyl, mean)[[3]]
abs(tapply(mtcars$hp, mtcars$cyl, mean)[[1]]-tapply(mtcars$hp, mtcars$cyl, mean)[[3]])
debug(ls)
ls
ls()
exit
q
ok
quit
quit
quit()
