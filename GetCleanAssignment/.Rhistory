GDP190 <- read.csv("GDP190.csv", header=FALSE, skip=5, col.names = c("CountryCode", "Ranking", "", "CountryName", "Economy", "", "", "", "", ""))
tail(GDP190)
head(GDP190)
GDP190$X <- NULL
head(GDP190)
GDP190$X.1 <- NULL
GDP190$X.2 <- NULL
GDP190$X.3 <- NULL
GDP190$X.4 <- NULL
GDP190$X.5 <- NULL
head(GDP190)
na.omit(GDP190)
str(GDP190)
tail(GDP190)
complete.cases(GDP190)
sum(complete.cases(GDP190))
GDP190 <- read.csv("GDP190.csv", header=FALSE, skip=5, col.names = c("CountryCode", "Ranking", "", "CountryName", "Economy", "", "", "", "", ""), na.strings = " ")
str(GDP190)
GDP190 <- read.csv("GDP190.csv", header=FALSE, skip=5, col.names = c("CountryCode", "Ranking", "", "CountryName", "Economy", "", "", "", "", ""), na.strings = c(" ","NA")
)
GDP190 <- read.csv("GDP190.csv", header=FALSE, skip=5, col.names = c("CountryCode", "Ranking", "", "CountryName", "Economy", "", "", "", "", ""), na.strings = c(" ","NA"))
str(GDP190)
GDP190$X <- NULL
GDP190$X.1 <- NULL
GDP190$X.2 <- NULL
GDP190$X.3 <- NULL
GDP190$X.4 <- NULL
GDP190$X.5 <- NULL
str(GDP190)
?tbl_df
GDP190 <- read.csv("GDP190.csv", header=FALSE, skip=5, col.names = c("CountryCode", "Ranking", "", "CountryName", "Economy", "", "", "", "", "")
)
GDP190 <- read.csv("GDP190.csv", header=FALSE, skip=5, col.names = c("CountryCode", "Ranking", "", "CountryName", "Economy", "", "", "", "", ""))
GDP190
GDP190$X <- NULL
GDP190$X.1 <- NULL
GDP190$X.2 <- NULL
GDP190$X.3 <- NULL
GDP190$X.4 <- NULL
GDP190$X.5 <- NULL
GPD190
GDP190
arrange(GDP190, Ranking)
EDU <- read.csv("EDU.csv")
head(EDU)
GDPEDU <- merge(GDP190, EDU)
head(GDPEDU)
arrange(GDPEDU, Ranking)
head(GDPEDU)
str(GDPEDU)
library(stringr)
airquality
grep(224, airquality$Solar.R)
airquality[grep(224, airquality$Solar.R),]
airquality[grep(71, airquality$Temp),]
airquality[grep(70, airquality$Temp),]
airquality[grep(80, airquality$Temp),]
library(lubridate)
install.packages("lubridate")
library(lubridate)
Sys.Date()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
class(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
ymd(this_day)
myd(this_day)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
mdy("25081985")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1-9-2012")
mdy("1-9-2012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=15, minutes=41, seconds=55)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
deparse()
depart
arrive <- depart + hours(15) + minutes(50)
tz?
;
?tz
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "ACSIdaho.csv")
ACSIdaho <- read.csv("ACSIdaho.csv")
head(ACSIdaho)
splitnames <- strsplit(names(ACSIdaho), split = "wgtp")
splitnames
splitnames[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP190.csv")
GDP190 <- read.csv("GDP190.csv", header = TRUE)
head(GDP190)
GDP190 <- read.csv("GDP190.csv", skip = 4, colClasses = c("character", "numeric", "NULL", "character", "numeric", "NULL", "NULL", "NULL", "NULL", "NULL"), col.names = c("CountryCode", "Ranking", "CountryName", "GDP"))
GDP190 <- read.csv("GDP190.csv", skip = 4, colClasses = c("character", "numeric", "NULL", "character", "numeric", "NULL", "NULL", "NULL", "NULL", "NULL"), col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", "", ""))
GDP190 <- read.csv("GDP190.csv", skip = 4, colClasses = c("character", "character", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"), col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", "", ""))
)
GDP190 <- read.csv("GDP190.csv", skip = 4, colClasses = c("character", "character", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"), col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", "", ""))
)
GDP190 <- read.csv("GDP190.csv", skip = 4, colClasses = c("character", "character", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"), col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", "", ""))
;
GDP190 <- read.csv("GDP190.csv", skip = 4, colClasses = c("character", "character", "NULL", "character", "character", "NULL", "NULL", "NULL", "NULL", "NULL"), col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", "", ""))
.
asd
GDP190 <- read.csv("GDP190.csv", skip = 4, col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", "", ""))
)
GDP190 <- read.csv("GDP190.csv", skip = 4, col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", ""))
GDP190 <- read.csv("GDP190.csv", skip = 4, col.names = c("CountryCode", "Ranking", "", "CountryName", "GDP", "", "", "", "", ""))
??!?!?!
ok
GDP190 <- read.csv("GDP190.csv", skip = 4)
head(GDP190)
GDP190 <- read.csv("GDP190.csv", skip = 4, col.names = c("CountryCode", "Ranking", "NA", "CountryName", "GDP", "", "", "", "", ""))
)))
GDP190 <- read.csv("GDP190.csv", skip = 4, col.names = c("CountryCode", "Ranking", "NA", "CountryName", "GDP", "NA", "NA", "NA", "NA", "NA"))
))))))))))))
GDP190 <- read.csv("GDP190.csv", skip = 4, col.names = c("CountryCode", "Ranking", "NA3", "CountryName", "GDP", "NA5", "NA6", "NA7", "NA8", "NA9"))
?read.csv
)
GDP190
head(GDP190)
GPDcomma <- gsub(",", "", GDP190$GDP)
GPDcomma
as.numeric(GPDcomma)
na.omit(as.numeric(GPDcomma))
GPDcomma[is.na(as.numeric(GPDcomma)), ]
GPDcomma[is.na(as.numeric(GPDcomma))]
GPDcomma[!is.na(as.numeric(GPDcomma))]
GPDcomma <- as.numeric(GPDcomma)
GPDcomma
is.na(GPDcomma)
!is.na(GPDcomma)
GPDcomma[!is.na(GPDcomma)]
GPDcomma <- GPDcomma[!is.na(GPDcomma)]
GPDcomma
sum(GPDcomma)
mean(GPDcomma)
GPDcomma
GPDcomma[190,]
GPDcomma1:190]
GPDcomma[1:190]
GPDcomma <- GPDcomma[1:190]
mean(GPDcomma)
grep("*United",countryNames), 2
grep("*United",GDP190$CountryName), 2
grep("*United",GDP190$CountryName)
GDP190[grep("*United",GDP190$CountryName), 2]
countryNames <- GDP190$CountryName
countryNames
grep("*United",countryNames), 2
countryNames[grep("*United",countryNames), 2]
grep("*United",countryNames)
grep("^United",countryNames)
grep("United$",countryNames)
grep("^United",countryNames)
grep("^United",countryNames)
grep("^United",countryNames)[1]
grep("^United",countryNames)[2]
grep("^United",countryNames)[3]
grep("^United",countryNames)[4]
class(grep("^United",countryNames))
?grep
grepl("^United",countryNames)[4]
grepl("^United",countryNames)
sum(grepl("^United",countryNames))
sum(grepl("$United",countryNames))
sum(grepl("*United",countryNames))
GDP190[1:190,]
GDP190[1:191,]
tail(GDP190[1:191,])
tail(GDP190[1:190,])
GDP190 <- GDP190[1:190,]
GDP190$NA3 <- NULL
GDP190$NA5 <- NULL
GDP190$NA6 <- NULL
GDP190$NA7 <- NULL
GDP190$NA8 <- NULL
GDP190$NA9 <- NULL
GDP190
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "EDU.csv")
EDU <- read.csv("EDU.csv")
EDU
str(EDU)
str(GDP190)
GDPEDU <- merge(GDP190, EDU, by = "CountryCode")
head(GDPEDU)
str(GDPEDU)
?grep
grep("June", GDPEDU)
grep("June", GDPEDU$System.of.National.Accounts)
grep("06", GDPEDU$System.of.National.Accounts)
grep("6", GDPEDU$System.of.National.Accounts)
head(GDPEDU$System.of.National.Accounts)
grep("06", GDPEDU)
grep("*06*", GDPEDU)
grep("*06*", GDPEDU$Source.of.most.recent.Income.and.expenditure.data)
grepl("-06", GDPEDU$Source.of.most.recent.Income.and.expenditure.data)
sum(grepl("-06", GDPEDU$Source.of.most.recent.Income.and.expenditure.data))
sum(grepl("-06-", GDPEDU$Source.of.most.recent.Income.and.expenditure.data))
sum(grepl("-6-", GDPEDU$Source.of.most.recent.Income.and.expenditure.data))
sum(grepl("-06-", GDPEDU$Source.of.most.recent.Income.and.expenditure.data))
grep("fiscal", GDPEDU)
grep("fiscal", GDPEDU$Income.Group)
grep("fiscal", GDPEDU$Special.Notes)
grepl("fiscal", GDPEDU$Special.Notes)
sum(grepl("fiscal", GDPEDU$Special.Notes))
grep("fiscal", GDPEDU$Special.Notes)
grep("fiscal", GDPEDU$National.accounts.base.year)
grep("June", GDPEDU$National.accounts.base.year)
grep("june", GDPEDU$National.accounts.base.year)
grep("June", GDPEDU$National.accounts.base.year)
grep("June", GDPEDU$National.accounts.reference.year)
grep("June", GDPEDU$System.of.National.Accounts)
grep("June", GDPEDU$Source.of.most.recent.Income.and.expenditure.data)
grep("June", GDPEDU$X2.alpha.code)
grep("June", GDPEDU$Latest.trade.data)
grep(".June.", GDPEDU)
grep(".June.", GDPEDU$Latest.trade.data)
grep(".June.", GDPEDU$Source.of.most.recent.Income.and.expenditure.data)
grep(".June.", GDPEDU$IMF.data.dissemination.standard)
head(GDPEDU)
tail(GDPEDU)
grep(".June.", GDPEDU$Special.Notes)
sum(grepl(".June.", GDPEDU$Special.Notes))
library(quantmod)
install.packages("quantmod")
install.packages("xts")
install.packages("xts")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN", auto.assing=FALSE)
amzn
amzn = getSymbols("AMZN", auto.assing=FALSE)
AMZN
head(AMZN)
sampleTimes = index(amzn)
sampleTimes = index(amzn)
sampleTimes
sampleTimes = index(AMZN)
AMZN
head(AMZN)
year(AMZN[[1]])
year(AMZN[[1]], tz="America/New_York")
year("2012")
?lubridate
class(AMZN)
?xts
AMZN[2012]
AMZN["2012-01-01",]
AMZN["2012-01-01"]
AMZN["2012-01-01"::]
AMZN["2012"::]
AMZN[2012::]
AMZN["2012/2013"]
nrows(AMZN["2012/2013"])
nrow(AMZN["2012/2013"])
names(AMZN)
.indexday(AMZN)
.indexmday(AMZN)
.indexwday(AMZN)
sum(grepl(2, .indexwday(AMZN))
)
.indexyear(AMZN)
AMZN["2012"]
AMZN2012 <- AMZN["2012"]
.indexwday(AMZN2012)
grepl(2, .indexwday(AMZN2012))
sum(grepl(2, .indexwday(AMZN2012)))
sum(grepl(1, .indexwday(AMZN))
)
sum(grepl(1, .indexwday(AMZN2012))
)
length(AMZN2012)
dim(AMZN2012)
quit
quit()
setwd("GetCleanAssignment/")
dir()
accXtest <- read.table("UCIHARDataset/test/InertialSignals/body_acc_x_test.txt")
accXtest
head(accXtest)
str(accXtest)
Xtest <- read.table("UCIHARDataset/test/X_test.txt")
str(Xtest)
dim(Xtest)
features <- read.table("UCIHARDataset/features.txt")
features
str(features)
features[1]
features[2]
class(features[2])
class(features[[2]])
features[[2]] <- as.character(features[[2]])
class(features[[2]])
features[2]
str(features)
names(Xtest)
names(Xtest) <- features[[2]]
Xtest
head(Xtest)
?tbl_df
??tbl_df
library(dplyr)
Xtest <- tbl_df(Xtest)
names(Xtest)
str(Xtest)
Xtest$`tBodyAcc-std()-X`
?tbl_df
Xtbl <- tbl_df(Xtest)
Xtest[1]
Xtest[,1]
Xtest[grep("mean()$"),]
Xtest[grep("mean()$", names(Xtest)),]
grep("mean()$", names(Xtest))
?grep
grep("*mean\(\)", names(Xtest))
grep("*mean()", names(Xtest))
Xtest[grep("*mean()", names(Xtest)),]
Xtest[grep("*mean()$", names(Xtest)),]
Xtest[grep("mean()$", names(Xtest)),]
grep("mean()$", names(Xtest))
grep("mean()", names(Xtest))
grep("mean()$", names(Xtest))
grep("*mean()", names(Xtest))
grep("mean()", names(Xtest))
Xtest[grep("mean()", names(Xtest)),]
dim(Xtest[grep("mean()", names(Xtest)),])
dim(Xtest[,grep("mean()", names(Xtest))])
Xtest[,grep("mean()", names(Xtest))]
Xtest[,grep("mean\(\)", names(Xtest))]
Xtest[,grep("mean/(/)", names(Xtest))]
Xtest[,grep("mean\\(\\)", names(Xtest))]
XtestMeans <- Xtest[,grep("mean\\(\\)", names(Xtest))]
XtestMeans
str(XtestMeans)
names(Xtest)
XtestStds <- Xtest[,grep("std\\(\\)", names(Xtest))]
XtestStds
str(XtestStds)
dim(accXtest)
128/39
summarise(accXtest)
dim(accXtest)
str(accXtest)
SubjTest <- read.table("UCIHARDataset/test/subject_test.txt")
SubjTest
dim(SubjTest)
levels(SubjTest)
levels([SubjTest[2])
levels([SubjTest[[2]])
class([SubjTest[[2]])
levels(SubjTest[[2]])
class(SubjTest[[2]])
SubjTest[[2]]
SubjTest[[1]]
levels(SubjTest[[1]])
class(SubjTest[[1]])
as.factor(SubjTest[[1]])
SubjTest[[1]] <- as.factor(SubjTest[[1]])
dim(SubjTest)
SubjTest[[1]]
sum(SubjTest[[1]])
?factor
names(SubjTest)
names(SubjTest) <- "Subject"
names(SubjTest)
names(SubjTest)
Xtest
Xtest[,1]
Xtest[1,]
dim(Xtest[1,])
names(Xtest)
names(Xtest)
SubjTest
SubjTest[[1]]
paste(names(Xtest), SubjTest[[1]])
length(names(Xtest))
length(names(SubjTest[[1]]))
length(names(SubjTest[1]))
length(names(SubjTest))
length(names(SubjTest[[1]]))
SubjTest[[1]]
SubjTest[[1]] <- as.character(SubjTest[[1]])
SubjTest[[1]]
paste(names(Xtest), SubjTest[[1]])
length(SubjTest[[1]])
SubjTest[[1]] <- as.numeric(SubjTest[[1]])
Xtest[,1]
?cbind
names(cbind(SubjTest, Xtest))
Xtest <- names(cbind(SubjTest, Xtest))
str(Xtest)
Xtest <- read.table("UCIHARDataset/test/X_test.txt")
Xtest
names(cbind(SubjTest[1], Xtest))
names(cbind(SubjTest[[1]], Xtest))
features[1]
features[2]
names(Xtest) <- features[2]
names(cbind(SubjTest[[1]], Xtest))
names(cbind(SubjTest[1], Xtest))
names(Xtest)
names(Xtest) <- features[[2]]
names(Xtest)
names(cbind(SubjTest[1], Xtest))
str(cbind(SubjTest[1], Xtest))
SubjTest[1]
head(SubjTest[1])
SubjTest[1]
SubjTest <- read.table("UCIHARDataset/test/subject_test.txt")
SubjTest
head(SubjTest)
names(SubjTest) <- "Subject"
str(cbind(SubjTest[1], Xtest))
Xtest <- cbind(SubjTest[1], Xtest)
Xtest
head(Xtest)
str(Xtest)
sum(Xtest)
summarise(Xtest)
Xtest$Subject
as.factor(Xtest$Subject)
Xtest$Subject <- as.factor(Xtest$Subject)
?group_by
group_by(Xtest, Subject)
group_by(Xtest$`tBodyAcc-mean()-X`, Subject)
group_by(Xtest, Subject)
group_by(Xtest, levels(Subject))
group_by(Xtest, levels(Xtest$Subject))
group_by(Xtest, Xtest$Subject)
group_by(Xtest, Subject)
Xtest$Subject
?table
XtestMeans <- cbind(SubjTest[1], XtestMeans)
XtestStds <- cbind(SubjTest[1], XtestMeans)
XtestMeans
group_by(XtestMeans, Subject)
str(group_by(XtestMeans, Subject))
dim(group_by(XtestMeans, Subject))
XtestMeans$Subject
XtestMeans$Subject
summarise(XtestMeans)
XtestMeans
summarise(XtestMeans)
summarise(XtestMeans, mean)
summarise(XtestMeans, mean=mean)
summarise(XtestMeans, mean=mean())
summarise(XtestMeans, mean=mean(value))
summarize(XtestMeans, mean=mean(value))
summarize(XtestMeans$Subject, mean=mean(value))
summarize(XtestMeans, mean=mean(value))
names(XtestMeans)
grepl("Gyro", names(XtestMeans))
names(XtestMeans)[grepl("Gyro", names(XtestMeans))]
gsub("\'", "", names(XtestMeans))
gsub("\\'", "", names(XtestMeans))
sub("\\'", "", names(XtestMeans))
gsub("\\'", "", names(XtestMeans))
gsub("-", "", names(XtestMeans))
gsub("\"", "", names(XtestMeans))
names(XtestMeans) <- gsub("\"", "", names(XtestMeans))
XtestMeans$tBodyAcc-mean()-Y
gsub("'", "", names(XtestMeans))
names(XtestMeans) <- gsub("'", "", names(XtestMeans))
names(XtestMeans) <- gsub("()", "", names(XtestMeans))
names(XtestMeans)
names(XtestMeans) <- gsub("\\(\\)", "", names(XtestMeans))
names(XtestMeans)
names(XtestMeans) <- gsub("-m", "-M", names(XtestMeans))
names(XtestMeans)
names(XtestMeans) <- gsub("-", "", names(XtestMeans))
names(XtestMeans)
quit()
