r$content
content(r, "text")
content(r, "json")
content(r, "application/json")
fromJSON(content(r, "text"))
r <- GET("http://www.ncdc.noaa.gov/cdo-web/api/v2/locations?locationcategoryid=ST&limit=52", add_headers(token=noaaKey), accept_json())
r
fromJSON(content(r, "text"))
r <- GET("http://www.ncdc.noaa.gov/cdo-web/api/v2/data?datasetid=PRECIP_15&stationid=COOP:010008", add_headers(token=noaaKey), accept_json())
r
fromJSON(content(r, "text"))
r <- GET("http://www.ncdc.noaa.gov/cdo-web/api/v2/data?datasetid=PRECIP_15&stationid=COOP:010008&startdate=2016-10-10", add_headers(token=noaaKey), accept_json())
r
fromJSON(content(r, "text"))
r <- GET("http://www.ncdc.noaa.gov/cdo-web/api/v2/data?datasetid=PRECIP_15&stationid=COOP:010008&startdate=2016-10-10&enddate=2016-10-20", add_headers(token=noaaKey), accept_json())
r
fromJSON(content(r, "text"))
jsonr <- fromJSON(content(r, "text"))
class(jsonr)
class(jsonr)
jsonr
jsonr[1]
jsonr[2]
rm(jsonr)
r <- GET("http://www.ncdc.noaa.gov/cdo-web/api/v2/data?datasetid=PRECIP_15&stationid=COOP:010008&startdate=2016-10-10&enddate=2016-10-20", add_headers(token=noaaKey), accept_json())
r$content
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind | airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, data = airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red",  main="Big Apple Data")
xyplot(Ozone ~ Wind | as.Factor(Month), data=airquality, layout= c(5,1))
xyplot(Ozone ~ Wind | as.factor(Month), data=airquality, layout= c(5,1))
xyplot(Ozone ~ Wind | Month, data=airquality, layout= c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab,ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20, xlab=myxlab,ylab=myylab, main=mymain)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha=.5)
p3(5)
plot(x,y, pch=19, col=rgb(0,.5,.5))
plot(x,y, pch=19, col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRamp(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color=drv)
qplot(displ, hwy, data = mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, col=drv)
qplot(y=hwy, data = mpg, col = drv)
qplot(y=hwy, data = mpg, color = drv)
myhihg
myhigh
qplot(drv, hwy, data = mpg, geom="boxplot")
qplot(drv, hwy, data = mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data = hwy, fill = drv)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(displ, hwy, data = mpg, facets = drv ~ .)
qplot(displ, hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
ggplot(testdat, aes(x=myx, y=myy))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_blank()
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line(ylim=(-3,3))
g+geom_line(ylim=c(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(dataset, aes(x=displ, y=hwy, color=factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+face_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
swirl()
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(log(price), data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut)+geom_smooth("lm")
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
geom_smooth("lm")
qplot(carat, price, data=diamonds, color=cut)+geom_smooth(aes("lm"))
qplot(carat, price, data=diamonds, color=cut)+geom_smooth(aes(lm))
qplot(carat, price, data=diamonds, color=cut)+geom_smooth(lm)
qplot(carat, price, data=diamonds, color=cut)+geom_smooth(lm())
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm") + facet_grid(.~cut)
qplot(carat, price, data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(data=diamonds, aes(depth, price))
summar(g)
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(data=diamonds$carat, seq(0,1,length = 4), na.rm=TRUE)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g<- ggplot(data=diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(data=diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
quit()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lattice
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?print.trellis
library(datasets)
data(airquality)
qplot(votes, rating, data = movies)
library(ggplot2)
qplot(votes, rating, data = movies)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2movies)
library(ggplot2)
library(lattice)
par(mar=c(0,0,0,0))
dist(airquality)
dist(mpg)
disty <- dist(mpg)
hClustering
?hClustering
??hClustering
clustme <- hclust(disty)
plot(clustme)
heatmap(airquality)
heatmap(c(airquality$Ozone, airquality$Solar.R))
par(mar= rep(0.2,4))
datamatrix <- matrix(rnorm(400), nrow=40)
dist(datamatrix)
disty <- dist(datamatrix)
hclust(disty)
plot(hclust(disty))
heatmap(hclust(disty))
heatmap(datamatrix)
kmeans(datamatrix)
?kmeans
kmeans(datamatrix, 10)
plot(kmeans(datamatrix, 10))
kmeans(datamatrix, 10)
heatmap(kmeans(datamatrix, 10))
heatmap(kmeans(datamatrix, 10)$cluster)
kmeansobj <- kmneans(datamatrix, 10)
kmeansobj <- kmeans(datamatrix, 10)
kmeansobj
kmeansobj$cluster
plot(x,y, col=kmeansobj$cluster)
datamatrix
plot(datamatrix[1,],datamatrix[,1], col=kmeansobj$cluster)
plot(datamatrix[1,],datamatrix[2,], col=kmeansobj$cluster)
plot(datamatrix[1,],datamatrix[2,], col=kmeansobj$cluster)
plot(datamatrix[1,],datamatrix[2,], col=kmeansobj$cluster)
kmeansobj <- kmeans(datamatrix, 10)
plot(datamatrix[1,],datamatrix[2,], col=kmeansobj$cluster)
plot(datamatrix[c(1,2,3),],datamatrix[c(4,5,6),], col=kmeansobj$cluster)
plot(datamatrix[c(1..5),],datamatrix[c(6..10),], col=kmeansobj$cluster)
plot(datamatrix[c(1...5),],datamatrix[c(6...10),], col=kmeansobj$cluster)
plot(datamatrix[c(1-5),],datamatrix[c(6-10),], col=kmeansobj$cluster)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
denmt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(cx, cy)
mdist
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch=19, cex=2, col=colsq[newClust2])
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$cluster
kmObj$iter
plot(x,y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*diag*t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd$d
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
plot
a1 <- (svd1$u[,1] * svd1$d[1] %*% t(svd1$v[,1]))
a1 <- svd1$u[,1] * svd1$d[1] %*% t(svd1$v[,1])
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2 <- svd1$u[,1:2] %*% t(svd1$v[,1]) * svd1$d[11]
a2 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) * svd1$d[11]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, boolean = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1$[,10:12])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12, maxCon))
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
sub1[,1:3]
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
quit()
install.packages("pdftools")
install.packages("stringr")
install.packages("dplyr")
install.packages("lattice")
install.packages("ggplot2")
install.packages("ColorPalette")
install.packages("xml2")
getwd()
dir()
Sys.less("daily_88101_1999.csv")
pm0 <- read.table("daily_88101_1999.csv", header = TRUE)
pm0 <- read.table("daily_88101_1999.csv", header = TRUE, sep = ",")
str(pm0)
head(pm0)
names(pm0)
summary(pm0)
pm0t <- read.table("daily_81102_1999.csv", header = TRUE, sep=",")
str(pm0t)
?memory
??mem
1304000*28*8
1304000*28*8/1024
1304000*28*8/1024/1024
1304000*28*8/2048
1304000*28*8/1024^2
pm1 <- read.table("daily_88101_2012.csv", header= TRUE, sep=",")
str(pm1)
str(pm0)
summary(pm0$POC)
summary(pm0$X1st.Max.Value)
summary(pm0$Sample.Duration)
rm(pm*)
rm(pm0)
rm(pm0t)
rm(pm1)
install.packages("swirl")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
date <- pm1$Date
dates <- pm1$Date
rm(date)
str(date)
str(dates)
dates <- as.Date(as.character(date), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
dates
head(dates)
hist(date[negative], "month")
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 && county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Side.ID == 2008)
pm0sub <- subset(cnt0, county.site == 63.2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub < - pm0sub$Sample.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2))
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h = median(x0sub), na.rm=TRUE)
abline(h = median(x0sub, na.rm=TRUE), lwd=2 )
plot(dates1, x1sub, pch=20)
abline(h = median(x1sub, na.rm=TRUE), lwd=2 )
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(,m0)
summary(m0)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0) , mean = mn0)
d1 <- data.frame(state = names(mn1) , mean = mn1)
mrg <- merge(d0, d1, set = "state")
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y, ]
dir()
setwd("ExploDataPA2/")
dir()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip", "pm25.zip")
unzip("pm25.zip")
dir()
sccodes <- readRDS("Source_Classification_Code.rds")
head(sccodes)
sccodes[,1]
sccodes[4]
sccodes[4,]
sccodes[4,c(2,3,4)]
sccodes[4,c(2,3,4,4)]
sccodes[4,c(2,3,4,4,5)]
grep("coal", sccodes[,2])
grep("coal", sccodes[,3])
sum(grepl("coal", sccodes[,]))
sum(grepl("coal", sccodes[,5]))
sum(grepl("coal", sccodes[,3]))
sum(grepl("coal", sccodes[,2]))
sum(grepl("Coal", sccodes[,3]))
sum(grepl("Coal", sccodes[,2]))
sum(grepl("Coal", sccodes[,4]))
sum(grepl("Coal", sccodes[,5]))
sum(grepl("Coal", sccodes[,6]))
sum(grepl("Coal", sccodes[,7]))
sccodes[,7]
levels(sccodes[,7])
levels(sccodes[,6])
levels(sccodes[,5])
levels(sccodes[,4])
levels(sccodes[,3])
levels(sccodes[,2])
levels(sccodes[,8])
